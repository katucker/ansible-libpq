#!/usr/bin/env ansible-playbook
---

- name: Add apt repository for nodeJS on Debian.
  apt_repository: repo=ppa:chris-lea/node.js state=present
  sudo: True
  when: ansible_os_family == "Debian"
      
- name: Install nodeJS on Debian.
  apt: pkg=nodejs state=present
  sudo: True
  when: ansible_os_family == "Debian"
  
- name: Install packages needed for building node-libpq from source on Debian.
  apt: pkg={{ item }} state=present
  sudo: True
  with_items:
    - git
    - g++
  when: ansible_os_family == "Debian"
      
- name: Install bootstrap for EPEL repository on RedHat.
  copy: 
    src: bootstrap-epel.repo
    dest: /etc/yum.repos.d/
    owner: root
    group: root
    mode: 0644
  sudo: True
  when: ansible_os_family == "RedHat"

- name: Install EPEL repository on RedHat.
  yum: name=epel-release enablerepo=bootstrap-epel state=present
  sudo: True
  when: ansible_os_family == "RedHat"

- name: Enable EPEL repository on RedHat.
  ini_file: dest=/etc/yum.repos.d/epel.repo section=epel option=enabled value=1
  sudo: True
  when: ansible_os_family == "RedHat"

- name: Install nodeJS on RedHat.
  yum: name=npm state=present
  sudo: True
  when: ansible_os_family == "RedHat"
  
- name: Install packages needed for building node-libpq from source on RedHat.
  yum: name={{ item }} state=present
  sudo: True
  with_items:
    - git
    - g++
  when: ansible_os_family == "RedHat"
  
- name: Clone the node-libpq code.
  git: repo={{ libpq_repo_url }} dest={{ libpq_dest_folder }} clone=yes update=yes version={{ libpq_repo_version | default(omit) }}
      
- name: Install the node-libpq module.
  npm: path={{ libpq_dest_folder }} production={{ libpq_production }}
